plugins {
    id "java"
    id "net.kyori.blossom" version "1.3.0"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "6f53277"

    id "org.spongepowered.mixin" version "d5f9873"
}

archivesBaseName = projectName
version = projectVersion
group = projectGroup

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

blossom {
    String className = "src/main/kotlin/xyz/deftu/hbc/HypixelBedwarsChecker.kt"
    replaceToken("@VERSION@", projectVersion, className)
    replaceToken("@REPO@", projectRepo, className)
    replaceToken("@NAME@", projectName, className)
    replaceToken("@ID@", projectId, className)
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false

    clientRunArgs += "--mixin mixins.${projectId}.json"
    clientRunArgs += "--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker"
    clientJvmArgs += "-Dfml.coreMods.load=cc.woverflow.wcore.tweaker.WCoreTweaker"
}

configurations {
    shade
    implementation.extendsFrom(shade)
}

repositories {
    mavenCentral()
    maven { url("https://repo.sk1er.club/repository/maven-public/") }
    maven { url("https://repo.spongepowered.org/repository/maven-public/") }
    
    maven { url("https://repo.woverflow.cc/") }
}

dependencies {
    shade("gg.essential:loader-launchwrapper:1.1.3")
    compileOnly("gg.essential:essential-1.8.9-forge:1852")
    shade("cc.woverflow:w-core-tweaker:1.0.2")
    compileOnly("cc.woverflow:w-core:1.1.3")

    shade(api("com.squareup.okhttp3:okhttp:4.9.2"))

    compileOnly(annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT"))
}

processResources {
    inputs.property("version", project.version)
    inputs.property("mcversion", project.minecraft.version)

    from(sourceSets.main.resources.srcDirs) {
        include("mcmod.info")
        expand(
                "version": project.version,
                "mcversion": project.minecraft.version
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude("mcmod.info")
    }
}

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.shade]
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add(sourceSets.main, "mixins.${projectId}.refmap.json")
}

jar.enabled = false
jar.finalizedBy(shadowJar)
jar.manifest.attributes(
        "ModSide": "CLIENT",
        "ForceLoadAsMod": true,
        "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
        "TweakOrder": "0",
        "MixinConfigs": "mixins.${projectId}.json"
)